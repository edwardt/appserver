#
# This is a server directory configuration of the "appserver" gem. Use the
# "appserver" command or visit http://github.com/zargony/appserver for details
#

#
# Global settings
#

# Path to the default directory of git repositories that contain the
# applications to deploy. Defaults to the home directory of the user 'git'
#git_dir: /var/git

# Name of the monit configuration file that should be written
#monit_conf: monitrc

# Command to execute to tell monit to reload the configuration. Used within
# the monit configuration, so this command will be called as root
#monit_reload: /usr/sbin/monit reload

# Name of the nginx configuration file that should be written
#nginx_conf: nginx.conf

# Command to execute to tell nginx to reload the configuration. Used within
# the monit configuration, so this command will be called as root
#nginx_reload: /usr/sbin/nginx -s reload

# Path to thin. If you installed thin using Rubygems, you probably want to
# adjust this
#thin: /usr/local/bin/thin

# Extra options passed to thin
#thin_opts: -e production

# Default number of application instances
#instances: 3

# Path where to store pid files of running instances. Defaults to the
# tmp/pids directory in the application
#pids_dir: tmp/pids

# Path where to store sockets of running instances. Defaults to the
# tmp/sockets directory in the application
#sockets_dir: tmp/sockets

# Path/name of the logfile for instance servers. Defaults to log/server.log
# in the application
#server_log: log/server.log

# Let Monit watch the CPU usage of instances and restart them if their
# CPU usage exceeds this value
#max_cpu_usage:

# Let Monit watch the memory usage of instances and restart them if their
# memory usage exceeds this value
#max_memory_usage:

# When doing CPU/memory usage checks, only restart an instance if it exceeds
# a resource for at least this number of Monit cycles
#usage_check_cycles: 5

# Let Monit check periodically, if instances provide an answer to HTTP
# requests within the given timeout, or restart them if they don't. Set
# to 0 to disable
#http_check_timeout: 30

# If no explicit hostname is specified for an application, it'll be
# configured as a subdomain of this domain
#domain: <system's domainname>

# Path where public static files should be served from. Defaults to the public
# directory in the application
#public_dir: public

# Path/name of the logfile for request logging. Defaults to log/access.log
# in the application
#access_log: log/access.log

#
# Application settings
#

# Every application must be listed under 'apps' with a unique key and a
# hash of settings. All settings are optional.
#
# apps:
#   # A simple application using default settings
#   mypage: {}
#
#   # An application with totally customized settings
#   blog:
#     # A custom thin using a different Ruby and running in beta environment
#     thin: /usr/local/rvm/gems/ree-1.8.7-2010.02/bin/thin
#     thin_opts: -e beta
#
#     # The number of application instances to keep running
#     instances: 5
#
#     # Custom paths
#     pids_dir: /tmp/blogapp
#     sockets_dir: /tmp/blogapp
#     server_log: /var/log/blog.log
#
#     # Custom resource checks
#     max_cpu_usage: 80%
#     max_memory_usage: 200 Mb
#     usage_check_cycles: 5
#     http_check_timeout: 20
#
#     # The hostname that this application should receive requests for.
#     # Defaults to <appname>.<domain>
#     hostname: blog.example.com
#
#     # Request logging
#     access_log: /var/log/blog/access.log
#
#     # Serve files from the directory named 'static'
#     public_dir: static
#
