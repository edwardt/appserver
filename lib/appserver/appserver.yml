# This is an appserver directory configuration of the "appserver" gem. Use the
# "appserver" command or visit http://github.com/zargony/appserver for details

#
# SERVER SETTINGS
# Non application specific. Paths are relative to the appserver directory. The
# appserver directory is the directory, that contains this configuration file.
#

# Path to the default directory of git repositories that contain the
# applications to deploy. Defaults to the home directory of the user 'git'
#repo_dir: /var/git

# Path/name of the Monit configuration snippet that should be written
#monit_conf: monitrc

# Command to execute to tell Monit to reload the configuration. Used within
# the Monit snippet, so this command will be called as root
#monit_reload: /usr/sbin/monit reload

# Path/name of the Nginx configuration snippet that should be written
#nginx_conf: nginx.conf

# Command to execute to tell Nginx to reload the configuration. Used within
# the Monit snippet, so this command will be called as root
#nginx_reload: /usr/sbin/nginx -s reload

# Command to execute to tell Nginx to reopen the log files. Used within
# the Logrotate snippet, so this command will be called as root
#nginx_reopen: /usr/sbin/nginx -s reopen

# Path/name of the logrotate configuration snippet that should be written
#logrotate_conf: logrotate.conf


#
# APPLICATION SETTINGS
# Can be either specified globally for all applications or application-
# specific under the "apps" subtree (see examples at the bottom of this file).
# Paths are relative to the respective application directory. Every deployed
# application has it's own directory under the appserver directory.
#

# Branch to check out when deploying an application. Defaults to 'master'
#branch: master

# Name/path of the command to call Ruby. By default, this points to the
# ruby command in your PATH, usually /usr/bin/ruby. Set this, if you want to
# use a manually installed ruby that is not in your PATH. If you're using
# RVM, you can use "/usr/local/bin/rvm XYZ ruby" here, where XYZ is the
# Ruby version you want to run. Make sure the targetted Ruby version has
# the required gems installed ("rvm gem install appserver")
#ruby: /usr/bin/ruby

# Environment to run the application in. Defaults to 'production'
#environment: production

# User and group to run the instances under. If user is left empty, the user
# who owns the application directory is used. If group is left empty, the
# primary group of the user is used. For security reasons, you might want to
# set this to a different user than the file owner. (Debian based systems
# typically use "www-data")
#user:
#group:

# Number of instances (unicorn workers) for an application. This defaults to
# the number of CPUs detected, which should be fine for most cases (read the
# unicorn tuning tips before changing this)
#instances: 2

# Use Unicorn's application preloading before forking instances. Defaults to
# false (don't preload applications)
#preload: false

# By default, only PATH, PWD, GEM_HOME and GEM_PATH environment settings are
# preserved. If you need more environment variables to be preserved, list them
# here (comma-separated list). If you set this to *, all environment variables
# are preserved
#env_whitelist:

# In addition to the whitelisted environment variables, RACK_ENV and
# BUNDLE_PATH are set. If want to set more environment variables, specify
# them here
#env:
#  KEY: value

# Let Monit watch the CPU usage of instances and restart them if their
# CPU usage exceeds this value
#max_cpu_usage:

# Let Monit watch the memory usage of instances and restart them if their
# memory usage exceeds this value
#max_memory_usage:

# When doing CPU/memory usage checks, only restart an instance if it exceeds
# a resource for at least this number of Monit cycles
#usage_check_cycles: 5

# Let Monit check periodically, if instances provide an answer to HTTP
# requests within the given timeout, or restart them if they don't. Set
# to 0 to disable
#http_check_timeout: 30

# The hostname, Nginx should accept requests for. You most porbably want to
# specify the hostname for every application below. If an application has no
# hostname set, a subdomain of this default hostname will be used. Defaults
# to the system's domainname.
#hostname: example.com

# Path where public static files should be served from. Defaults to the public
# directory in the application
#public_dir: public


#
# APPLICATIONS
# All application default settings from above can be overridden for every
# application. You most probably want to set "hostname" to your liking here.
# Most other settings should do well with their defaults in most cases.
#

#apps:
#  # A simple blog application named "myblog"
#  myblog:
#    hostname: blog.example.com
#    instances: 1
