module Appserver
  class Monit < Struct.new(:server_dir)
    include Utils

    def self.write_config (server_dir)
      new(server_dir).write_config
    end

    def initialize (server_dir)
      self.server_dir = server_dir
    end

    def write_config
      safe_replace_file(server_dir.monit_conf) do |f|
        f.puts "# Monit configuration automagically generated by the \"appserver\" gem using"
        f.puts "# the appserver directory config #{server_dir.config_file}"
        f.puts "# Include this file into your system's monitrc (using an include statement)"
        f.puts "# to use it. See http://github.com/zargony/appserver for details."
        # Let Monit reload itself if this configuration changes
        f.puts "check file monit_conf with path #{server_dir.monit_conf}"
        f.puts "  if changed checksum then exec \"#{server_dir.monit_reload}\""
        # Reload Nginx if its configuration changes
        f.puts "check file nginx_conf with path #{server_dir.nginx_conf}"
        f.puts "  if changed checksum then exec \"#{server_dir.nginx_reload}\""
        # Add application-specific Monit configuration
        server_dir.apps.each do |app|
          app.write_monit_config(f)
        end
      end
    end
  end
end
